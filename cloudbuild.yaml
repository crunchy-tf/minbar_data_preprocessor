# FILE: cloudbuild.yaml (Adapted for FLAT project structure - all source files at repo root)

steps:
  # 0. Build Docker image
  # The current working directory for Cloud Build steps is /workspace (repo root) by default.
  # Docker will use /workspace as the build context.
  - name: 'gcr.io/cloud-builders/docker'
    args: [
        'build',
        # Image tag: REGION-docker.pkg.dev/PROJECT_ID/ARTIFACT_REPO_NAME/SERVICE_NAME:COMMIT_SHA
        '-t', 'europe-west9-docker.pkg.dev/minbar-459007/docker-repo/data-preprocessor:${SHORT_SHA}',
        # '-f', 'Dockerfile', # Optional: Docker looks for 'Dockerfile' by default in the context.
        '.' # Docker build context is the current directory (/workspace, i.e., repo root)
    ]

  # 1. Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
        'push', 'europe-west9-docker.pkg.dev/minbar-459007/docker-repo/data-preprocessor:${SHORT_SHA}'
    ]

  # 2. Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
        'run', 'deploy', 'data-preprocessor', # Cloud Run service name
        '--image=europe-west9-docker.pkg.dev/minbar-459007/docker-repo/data-preprocessor:${SHORT_SHA}', # Image to deploy
        '--region=europe-west9', # Deployment region for Cloud Run service
        '--platform=managed',
        '--port=8002', # Port your application listens on (defined in Dockerfile EXPOSE)
        '--allow-unauthenticated', # For easy testing access
        '--env-vars-file=.env.yaml',
        '--memory=2Gi', # Recommended memory for NLP applications
        '--cpu=1',      # Recommended CPU
        '--min-instances=0', # Scale to zero for cost savings during inactivity (for testing)
        '--max-instances=1'  # Limit scaling for testing to control costs
    ]

# Lists images that will be built by this pipeline.
images:
  - 'europe-west9-docker.pkg.dev/minbar-459007/docker-repo/data-preprocessor:${SHORT_SHA}'

# Overall timeout for the build process.
timeout: '1800s' # 30 minutes (generous for NLP model downloads in Dockerfile)

# Logging options for Cloud Build.
options:
  logging: CLOUD_LOGGING_ONLY # Sends logs only to Cloud Logging, simplifies bucket config.
  machineType: 'E2_HIGHCPU_8'   # <--- ADDED FOR FASTER BUILDS